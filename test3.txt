import { Component, OnInit } from '@angular/core';
import { ProductsService } from '../../services/products.service';
import { Observable } from 'rxjs';
import { Router } from '@angular/router';
import { NgFor, NgIf,AsyncPipe } from '@angular/common';

@Component({
  selector: 'app-products',
  imports:[NgFor,NgIf,AsyncPipe],
  templateUrl: './products.component.html',
  styleUrl: './products.component.css'
})

export class ProductsComponent implements OnInit {
  products$!: Observable<any[]>;
  selectedItem: any=null;
  editMode:boolean = false;

  constructor(private productsService: ProductsService, private router: Router) {}

  ngOnInit() {
    this.products$ = this.productsService.products$;
  }

  viewDetails(id: any) {
    this.productsService.setSelectedProduct(id);
    this.router.navigate(['/details']);
  }

  onEdit(id: any) {
    this.selectedItem = { ...id };
    this.editMode = true;
  }

  onDelete(id: number) {
    this.productsService.deleteProduct(id);
    if (this.selectedItem?.id === id) {
      this.editMode = false;
      this.selectedItem = null;
    }
  }

  onEditSave() {
    this.productsService.editProduct(this.selectedItem);
    this.editMode = false;
    this.selectedItem = null;
  }

  onEditCancel() {
    this.selectedItem = null;
    this.editMode = false;
  }
}
 <header>
        <h1>Product Management</h1>
        <nav>
<a routerLink="/products">All Products</a>
        <a routerLink="/add-product">Add Product</a>
        </nav>
    </header>
<div class="container">

  
  <div class="product-list">
    <div *ngFor="let item of products$ | async" class="product-card">
      <img [src]="item.image" alt="{{ item.name }}">
      <h3>{{ item.name }}</h3>
      <button (click)="onEdit(item); $event.stopPropagation()">Edit</button>
      <button (click)="onDelete(item.id); $event.stopPropagation()">Delete</button>
      <button (click)="viewDetails(item); $event.stopPropagation()">View</button>
    </div>
  </div>

  <div class="edit-form" *ngIf="editMode">
    <h2>Edit Product</h2>

    <form (submit)="onEditSave(); $event.preventDefault()" id="edit-form">
      <label>Name:
        <input name="name" [value]="selectedItem.name" (input)="selectedItem.name = $any($event.target).value" required />
      </label><br />

      <label>Image:
        <input name="image" [value]="selectedItem.image" (input)="selectedItem.image = $any($event.target).value" required />
      </label><br />

      <label>Price:
        <input type="number" name="price" [value]="selectedItem.price" (input)="selectedItem.price = +$any($event.target).value" required />
      </label><br />

      <label>Color:
        <input name="color" [value]="selectedItem.colors" (input)="selectedItem.colors = $any($event.target).value" required />
      </label><br />
<input type="hidden" id="edit-id" />
      <div class="center-btn">
        <button type="submit">Save</button>
        <button type="button" (click)="onEditCancel()">Cancel</button>
      </div>

    </form>
  </div>
  

</div>

body{
margin:0;
padding:0;
}
.container {
    display: flex;
    justify-content: space-between;
    justify-content: center;
    align-items: center;
    padding: 20px;
  }
  
  .product-list {
    width: 90%;
    display: flex;
    flex-direction: column;
     justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
  }
  
  .product-card {
    width: 200px;
    text-align: center;
    cursor: pointer;
  }
  
  .product-card img {
    width: 100%;
    height: 110px;
    object-fit: cover;
  }
 


.edit-form {
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            width: 300px;
            height: 300px;
            padding: 50px;
            margin: 25px;
            background: #f9f9f9;
        }

.edit-form.active{
        display:flex;
        }

.edit-form input{
width: 200px;
height: 18px;
margin: 10px;
margin-top: 8px;
}

.center-btn {
  display: flex;
  justify-content: space-evenly;
padding-top: 10px;
}

.center-btn button {
    width: 50px;
    height: 30px;
  background: #ff3c00;
  color: #fff;
  font-size: 12px;
  
}

  .edit-form h2{
    color: #ff3c00;
  }

  header{
      display: flex;
      padding-inline: 50px;
      padding-block: 8px;
      background-color: black;
      color: aliceblue;
      }

      nav {
              display: flex;
              gap: 16px;
              position: absolute;
              right: 50px;
              top: 35px;
            }
            a {
              color: white;
              font-size: 20px;
            }